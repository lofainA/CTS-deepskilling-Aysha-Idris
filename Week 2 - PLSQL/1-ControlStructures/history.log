26ca76d0-d87f-49d8-9093-a39ed88cdae1:1750697248310:662:S:SELECT table_name FROM user_tables;
5274f816-7e76-4999-bcd1-e796fd1f853f:1750697401424:60:S:SELECT * from system.loans;
916775f4-60c9-4bce-a708-e0a7429b500e:1750697417475:23:S:SELECT * FROM system.customers\n;
5e2a4ad4-61af-4c78-bb4a-8d0c0a402d03:1750857627429:5:S:BEGIN\n  EXECUTE IMMEDIATE 'DROP TABLE loans';\nEXCEPTION WHEN OTHERS THEN NULL;\nEND;\n/
0d5083cb-66b2-4cb0-96a6-2ed5b9cbe620:1750857627632:2:S:BEGIN\n  EXECUTE IMMEDIATE 'DROP TABLE customers';\nEXCEPTION WHEN OTHERS THEN NULL;\nEND;\n/
3e863c16-86f0-4cb0-b550-5d2546f38181:1750857627932:177:S:CREATE TABLE customers (\n  customer_id NUMBER PRIMARY KEY,\n  name VARCHAR2(100),\n  age NUMBER\n);
2c18fe7f-056b-4673-9546-00bcc5cee399:1750857628487:23:S:CREATE TABLE loans (\n  loan_id NUMBER PRIMARY KEY,\n  customer_id NUMBER,\n  interest_rate NUMBER(5,2),\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);
d136d3e9-5bae-486c-8b24-d448be16b619:1750857628704:14:S:INSERT INTO customers VALUES (1, 'Ram Kumar', 65);
611cd055-bf9a-487f-ae4c-05da41052156:1750857628799:4:S:INSERT INTO customers VALUES (2, 'Sara Ali', 55);
19e1b313-721d-4304-bac5-68c7c8c24e5b:1750857628879:3:S:INSERT INTO customers VALUES (3, 'John Paul', 70);
040df3ab-e55d-4a67-9950-10ae5f2fd44e:1750857629058:7:S:INSERT INTO loans VALUES (101, 1, 7.5);
e98b5c89-d5d1-420f-8a9d-ab09cd763974:1750857629142:2:S:INSERT INTO loans VALUES (102, 2, 8.0);
9eef158a-8565-4a59-bb98-9480aa2daa2c:1750857629227:5:S:INSERT INTO loans VALUES (103, 3, 9.2);
08b6f1a6-e2b6-4994-9350-caf570518cca:1750857629337:5:S:COMMIT;
55cf0d43-fe60-4a93-a0a3-8a0fff3fe3a5:1750857647259:78:S:select * from customers;
c0ed20bb-ac71-4510-80d4-aef8f1c3df43:1750857664550:26:S:select * from loans;
969bff35-6461-486f-97c8-5fd18871f888:1750857710310:0:S:SET SERVEROUTPUT ON;
47b6719b-6ee2-4ecd-99ad-44c0fe990865:1750857710911:10:S:BEGIN\n    FOR customer IN (SELECT customer_id FROM system.customers WHERE age > 60) LOOP\n        DBMS_OUTPUT.PUT_LINE('Updating interest rate for customer ID: ' || customer.customer_id);\n        UPDATE system.loans\n        SET interest_rate = interest_rate - 1.0\n        WHERE customer_id = customer.customer_id;\n    END LOOP;\n\n    COMMIT;\nEND;\n/
04a14fb0-01de-4a2b-b2a3-361cab5f913f:1750857728185:8:S:select * from loans;
fc90b8c9-fd5e-44f6-9649-4ffb4917b045:1750858399843:0:S:cl scr
8097e781-9f90-40fa-8a5d-8f26dc2d26bf:1750858568228:190:S:BEGIN EXECUTE IMMEDIATE 'DROP TABLE loans CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;\n/
0f39cefe-465f-4c56-92ea-9f305ad0fb6c:1750858568648:45:S:BEGIN EXECUTE IMMEDIATE 'DROP TABLE customers CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;\n/
325728bc-d7bf-464e-9b73-5d25fbb770f3:1750858569498:121:S:CREATE TABLE customers (\n  customer_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,\n  name VARCHAR2(100),\n  age NUMBER,\n  balance NUMBER(10, 2),\n  is_vip CHAR(1) DEFAULT 'N' CHECK (is_vip IN ('Y', 'N'))\n);
731843a1-91f2-446d-979f-5a3ab649392c:1750858569969:41:S:CREATE TABLE loans (\n  loan_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,\n  customer_id NUMBER,\n  interest_rate NUMBER(5, 2),\n  due_date DATE,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);
e35d4788-4e9a-4484-9f98-cde6bb611697:1750858576628:27:S:INSERT INTO customers (name, age, balance) VALUES ('Chris Evans', 68, 12000);
69997754-2f35-4ba1-abcd-f1dba9c1ddf2:1750858576753:6:S:INSERT INTO customers (name, age, balance) VALUES ('Mackenzie Smith', 54, 9000);
06624b7c-8177-4299-bf7a-871494087d10:1750858576843:7:S:INSERT INTO customers (name, age, balance) VALUES ('Bob Ross', 92, 15000);
d67b66b3-f4a3-481b-9bec-2597fe4a3233:1750858577046:10:S:INSERT INTO loans (customer_id, interest_rate, due_date) VALUES (1, 7.5, SYSDATE + 15);
c66f05ae-d71a-4736-830a-f138198be61f:1750858577165:8:S:INSERT INTO loans (customer_id, interest_rate, due_date) VALUES (2, 8.0, SYSDATE + 43);
926ca4ce-b9d9-41ad-86d9-1b22ba9e0c59:1750858577273:6:S:INSERT INTO loans (customer_id, interest_rate, due_date) VALUES (3, 9.2, SYSDATE + 7);
f6fadbc6-55f8-416e-85eb-167ed1e18be6:1750858577429:4:S:COMMIT;
bd885fea-d484-4755-9d39-0395fc46dfab:1750858586351:0:S:SET SERVEROUTPUT ON;
078c1efd-450a-4ccc-9af7-79987ad43b25:1750858587308:38:S:BEGIN\n    FOR customer IN (SELECT customer_id FROM system.customers WHERE age > 60) LOOP\n        DBMS_OUTPUT.PUT_LINE('Updating interest rate for customer ID: ' || customer.customer_id);\n        UPDATE system.loans\n        SET interest_rate = interest_rate - 1.0\n        WHERE customer_id = customer.customer_id;\n    END LOOP;\n\n    COMMIT;\nEND;\n/
b30a339f-9daa-4d3e-9d5e-036e4e3aaf74:1750858593202:0:S:cl scr
3dab8a9e-c3ee-4b79-8a67-0145c023c21f:1750858595874:65:S:BEGIN EXECUTE IMMEDIATE 'DROP TABLE loans CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;\n/
7f09b640-e724-441d-b1d8-ed8f30b65429:1750858596068:54:S:BEGIN EXECUTE IMMEDIATE 'DROP TABLE customers CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;\n/
0d86b3b5-35a6-40e7-9814-d02b3415df28:1750858596691:52:S:CREATE TABLE customers (\n  customer_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,\n  name VARCHAR2(100),\n  age NUMBER,\n  balance NUMBER(10, 2),\n  is_vip CHAR(1) DEFAULT 'N' CHECK (is_vip IN ('Y', 'N'))\n);
2da42219-4214-4f48-b202-767d2c056348:1750858597195:30:S:CREATE TABLE loans (\n  loan_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,\n  customer_id NUMBER,\n  interest_rate NUMBER(5, 2),\n  due_date DATE,\n  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);
d312f689-c9b0-4bae-87c2-c89d6d40567c:1750858602097:0:S:cl scr
8ce1cd5b-2f40-4e2d-b391-d420961e3d4b:1750858605260:8:S:INSERT INTO customers (name, age, balance) VALUES ('Chris Evans', 68, 12000);
ea868432-4dd7-48d7-b050-6354df217be2:1750858605360:5:S:INSERT INTO customers (name, age, balance) VALUES ('Mackenzie Smith', 54, 9000);
7374d2e0-5bd3-4218-9d2c-8dc6df6e223b:1750858605473:7:S:INSERT INTO customers (name, age, balance) VALUES ('Bob Ross', 92, 15000);
de489ab9-f302-4e53-8007-9fb4ba20ba5b:1750858605689:6:S:INSERT INTO loans (customer_id, interest_rate, due_date) VALUES (1, 7.5, SYSDATE + 15);
f4a67e9b-8e98-43cc-a233-eac3fa1e76df:1750858605793:5:S:INSERT INTO loans (customer_id, interest_rate, due_date) VALUES (2, 8.0, SYSDATE + 43);
8b7d0779-5507-4492-a0e7-734f9e615d9c:1750858605905:5:S:INSERT INTO loans (customer_id, interest_rate, due_date) VALUES (3, 9.2, SYSDATE + 7);
1d88e8ce-79f4-4052-b39d-265a3cd58bae:1750858606015:2:S:COMMIT;
31d5f8ad-c98b-4e56-8a31-89f478176b54:1750858610449:0:S:cl scr
2de4a1f8-4dd8-443a-ba33-4b2daa21309e:1750858619625:32:S:select * from customers;
442992f3-f626-499c-9fbf-e3dbb6cdef95:1750858631872:165:S:select * from loans;
2ebae6be-1dc4-4596-917a-07fbf6899e21:1750858747237:0:S:cl scr
cd9b1498-3af8-471d-81a8-5d762b624a0d:1750858750248:0:S:SET SERVEROUTPUT ON;
3a91d93c-8108-4c05-8322-8b7b1e4339ad:1750858750944:40:S:BEGIN\n    FOR customer IN (SELECT customer_id FROM system.customers WHERE age > 60) LOOP\n        DBMS_OUTPUT.PUT_LINE('Updating interest rate for customer ID: ' || customer.customer_id);\n        UPDATE system.loans\n        SET interest_rate = interest_rate - 1.0\n        WHERE customer_id = customer.customer_id;\n    END LOOP;\n\n    COMMIT;\nEND;\n/
7fa0bb0b-a0ed-4b01-8760-ece68b6de890:1750858759388:5:S:select * from loans;
60c4f8b0-86b3-4728-84fa-b1d9e6e8c6b7:1750861068543:178:S:select * from customers;
27a49476-91a9-41e1-a92d-3fb44b3bdb93:1750861153457:0:S:CL SCR
888f76da-c6b3-467e-8280-729f19f17fc5:1750861158453:0:S:SET SERVEROUTPUT ON;
4d24b3ae-9dc7-4e5c-9e8f-0697a98c6d72:1750861160162:309:S:BEGIN\n    FOR customer IN(SELECT customer_id FROM system.customers WHERE balance > 10000) LOOP\n        DBMS_OUTPUT.PUT_LINE('Upgrading customer ' || customer.customer_id || 'to VIP status');\n        UPDATE system.customers\n        SET is_vip = 'Y'\n        WHERE customer_id = customer.customer_id;\n    END LOOP;\n\n    COMMIT;\nEND;\n/
aa9b3e44-06f2-4498-a78d-404045caa404:1750861182893:24:S:SELECT * FROM customers;
20c4632e-2fd8-4bcf-8db2-56d60fd45cfe:1750861413744:93:S:select * from loans;
fabc5e9c-f5dc-442d-898a-4ab5dbf876a5:1750861464872:0:S:cl scr
c6a1a1dc-9d5d-4584-94ed-a5e44f371abc:1750861542526:0:S:cl scr
fab8c261-ec8c-43bf-9c35-314bf2bce812:1750861549794:0:S:SET SERVEROUTPUT ON;
c1ba643a-9a8b-4a11-a6f2-7b86b27e2ffc:1750861551492:312:S:BEGIN\n  FOR l IN (\n    SELECT l.loan_id, c.name, l.due_date\n    FROM loans l\n    JOIN customers c ON l.customer_id = c.customer_id\n    WHERE l.due_date BETWEEN SYSDATE AND SYSDATE + 30\n  ) LOOP\n    DBMS_OUTPUT.PUT_LINE('Reminder: Loan ID ' || l.loan_id || \n                         ' for customer ' || l.name || \n                         ' is due on ' || TO_CHAR(l.due_date, 'DD-MON-YYYY'));\n  END LOOP;\nEND;\n/
0d973f8c-b3df-4073-994c-02a963135940:1750869757875:502:S:BEGIN EXECUTE IMMEDIATE 'DROP TABLE accounts'; \nEXCEPTION WHEN OTHERS THEN NULL; \nEND;\n/
41d5a06c-0e7a-418d-9987-550e926ad945:1750869760172:517:S:CREATE TABLE accounts (\n  account_id NUMBER PRIMARY KEY,\n  holder_name VARCHAR2(100),\n  balance NUMBER(10, 2)\n);
f63139e5-bfc1-4606-94a1-62743e41b3c6:1750869760908:68:S:INSERT INTO accounts VALUES (1, 'Samuel Jackson', 50000);
2fc53623-3d7a-48a6-9920-162838a5eaff:1750869761109:20:S:INSERT INTO accounts VALUES (2, 'Emma Watson', 37000);
f64c2b13-69a3-4eb3-8284-754214eb4af3:1750869761200:5:S:COMMIT;
5d01b7a3-6a7e-4d04-acc2-cdb96f77282f:1750869772449:0:S:cl scr
2f8ee1cd-a082-4a49-8fb7-c120f9f2fba5:1750869786973:834:F:CREATE OR REPLACE PROCEDURE SafeTransferFunds (\n  from_id IN NUMBER,\n  to_id IN NUMBER,\n  amount IN NUMBER\n) AS\n  insufficient_funds EXCEPTION;\n  v_balance NUMBER;\nBEGIN\n  SELECT balance INTO v_balance FROM accounts WHERE account_id = p_from_account_id;\n\n  IF v_balance < amount THEN\n    RAISE insufficient_funds;\n  END IF;\n\n  UPDATE accounts\n  SET balance = balance - amount\n  WHERE account_id = from_id;\n\n  UPDATE accounts\n  SET balance = balance + amount\n  WHERE account_id = to_id;\n\n  COMMIT;\n  DBMS_OUTPUT.PUT_LINE('Transfer successful.');\nEXCEPTION\n  WHEN insufficient_funds THEN\n    ROLLBACK;\n    DBMS_OUTPUT.PUT_LINE('Transfer failed: Insufficient funds.');\n  WHEN OTHERS THEN\n    ROLLBACK;\n    DBMS_OUTPUT.PUT_LINE('Transfer failed: ' || SQLERRM);\nEND;\n/
323e8312-971f-45be-a7c4-1878d7b60735:1750869814766:542:F:CREATE OR REPLACE PROCEDURE SafeTransferFunds (\n  from_id IN NUMBER,\n  to_id IN NUMBER,\n  amount IN NUMBER\n) AS\n  insufficient_funds EXCEPTION;\n  v_balance NUMBER;\nBEGIN\n  SELECT balance INTO v_balance FROM accounts WHERE account_id = from_id;\n\n  IF v_balance < amount THEN\n    RAISE insufficient_funds;\n  END IF;\n\n  UPDATE accounts\n  SET balance = balance - amount\n  WHERE account_id = from_id;\n\n  UPDATE accounts\n  SET balance = balance + amount\n  WHERE account_id = to_id;\n\n  COMMIT;\n  DBMS_OUTPUT.PUT_LINE('Transfer successful.');\nEXCEPTION\n  WHEN insufficient_funds THEN\n    ROLLBACK;\n    DBMS_OUTPUT.PUT_LINE('Transfer failed: Insufficient funds.');\n  WHEN OTHERS THEN\n    ROLLBACK;\n    DBMS_OUTPUT.PUT_LINE('Transfer failed: ' || SQLERRM);\nEND;\n/
af46bc4b-2c03-4e48-a7d4-5e1427323e6d:1750869825478:0:S:cl scr
66553a82-a9ad-446c-8015-ca0797b760d0:1750869827389:85:F:BEGIN\n  SafeTransferFunds(1, 2, 1000); -- success\n  SafeTransferFunds(2, 1, 99999); -- fail: insufficient funds\nEND;\n/
8efe02be-e9d7-4b84-a02a-85b1b737766f:1750870086472:144:F:BEGIN EXECUTE IMMEDIATE 'DROP TABLE employees'; EXCEPTION WHEN OTHERS THEN NULL; END;\n/
2fcd2514-f419-4ec9-9bbd-40a590074124:1750870087866:265:F:CREATE TABLE employees (\n  emp_id NUMBER PRIMARY KEY,\n  emp_name VARCHAR2(100),\n  salary NUMBER(10, 2)\n);
a32ee738-a034-42ef-b488-30f7aaaf9500:1750870088392:89:F:INSERT INTO employees VALUES (101, 'Aysha Idris', 50000);
f4d5ff51-5ba9-4eaa-8bc8-3dd7014fefec:1750870088617:9:F:INSERT INTO employees VALUES (102, 'Abdul Rahman', 45000);
ae03d827-a26a-45a5-8817-5cde9a955c8c:1750870088725:4:F:COMMIT;
d90d37ad-f4dd-4dd1-b6b8-e6da56f76ccc:1750870101761:0:S:cl scr
96972e35-6b19-4060-b0d4-838660e6bc34:1750870113812:1317:F:CREATE OR REPLACE PROCEDURE UpdateSalary (\n  p_emp_id IN NUMBER,\n  p_percent IN NUMBER\n) AS\n  v_old_salary NUMBER;\nBEGIN\n  SELECT salary INTO v_old_salary FROM employees WHERE emp_id = p_emp_id;\n\n  UPDATE employees\n  SET salary = v_old_salary + (v_old_salary * p_percent / 100)\n  WHERE emp_id = p_emp_id;\n\n  COMMIT;\n  DBMS_OUTPUT.PUT_LINE('Salary updated successfully for employee ID ' || p_emp_id);\nEXCEPTION\n  WHEN NO_DATA_FOUND THEN\n    DBMS_OUTPUT.PUT_LINE('Error: Employee ID ' || p_emp_id || ' does not exist.');\n  WHEN OTHERS THEN\n    DBMS_OUTPUT.PUT_LINE('Unexpected error: ' || SQLERRM);\n    ROLLBACK;\nEND;\n/
a770b18c-d8c6-4ce0-9164-5c9eec155cc1:1750870126003:109:F:BEGIN\n  UpdateSalary(101, 10); -- valid\n  UpdateSalary(999, 15); -- invalid ID\nEND;\n/
f91a09ed-c9a9-463b-9353-a1a22bb196cb:1750870149573:0:S:cl scr
3854e69a-aba9-4235-a2a1-22ecc6173fba:1750870153230:13:F:CREATE OR REPLACE PROCEDURE UpdateSalary (\n  p_emp_id IN NUMBER,\n  p_percent IN NUMBER\n) AS\n  v_old_salary NUMBER;\nBEGIN\n  SELECT salary INTO v_old_salary FROM employees WHERE emp_id = p_emp_id;\n\n  UPDATE employees\n  SET salary = v_old_salary + (v_old_salary * p_percent / 100)\n  WHERE emp_id = p_emp_id;\n\n  COMMIT;\n  DBMS_OUTPUT.PUT_LINE('Salary updated successfully for employee ID ' || p_emp_id);\nEXCEPTION\n  WHEN NO_DATA_FOUND THEN\n    DBMS_OUTPUT.PUT_LINE('Error: Employee ID ' || p_emp_id || ' does not exist.');\n  WHEN OTHERS THEN\n    DBMS_OUTPUT.PUT_LINE('Unexpected error: ' || SQLERRM);\n    ROLLBACK;\nEND;\n/
0f1a6f58-44f6-454e-a872-280e56031d21:1750870223643:10:F:BEGIN\nUpdateSalary(101, 20);\nUpdateSalary(103, 10);\nEND;\n/
dbe72151-61fc-4359-89ab-cbea559dc691:1750870442009:466:F:CREATE OR REPLACE PROCEDURE AddNewCustomer (\n  p_customer_id IN NUMBER,\n  p_name        IN VARCHAR2,\n  p_age         IN NUMBER,\n  p_balance     IN NUMBER,\n  p_is_vip      IN CHAR\n) AS\nBEGIN\n  INSERT INTO customers (customer_id, name, age, balance, is_vip)\n  VALUES (p_customer_id, p_name, p_age, p_balance, p_is_vip);\n\n  COMMIT;\n  DBMS_OUTPUT.PUT_LINE('Customer added successfully: ' || p_name);\nEXCEPTION\n  WHEN DUP_VAL_ON_INDEX THEN\n    DBMS_OUTPUT.PUT_LINE('Error: Customer with ID ' || p_customer_id || ' already exists.');\n  WHEN OTHERS THEN\n    DBMS_OUTPUT.PUT_LINE('Unexpected error: ' || SQLERRM);\n    ROLLBACK;\nEND;\n/
a034ff32-ba10-42cd-b02f-ef17b54357b7:1750870563733:661:F:BEGIN\n  AddNewCustomer(1001, 'Kamisato Ayato', 24, 9500, 'N'); \n  AddNewCustomer(1001, 'Zhongli', 6000, 12000, 'Y'); \nEND;\n/
